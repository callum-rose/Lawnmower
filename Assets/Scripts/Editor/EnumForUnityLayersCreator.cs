#if UNITY_EDITOR
using Sirenix.OdinInspector;
using Sirenix.OdinInspector.Editor;
using System.Text;
using UnityEditor;
using UnityEngine;
using System.IO;

namespace Core
{
    internal class EnumForUnityLayersCreator : OdinEditorWindow
    {
        [ShowInInspector, FolderPath(AbsolutePath = true)] private string savePath = @"C:/Users/callu/Documents/GitHub/Lawnmower/Assets/Scripts/Core";
        [ShowInInspector] private string @namespace = "Core";

        private const string MenuPath = "Callum/Create Enum For Unity Layers";

        private const string EnumName = "UnityLayers";

        [MenuItem(MenuPath)]
        private static void Init()
        {
            var window = CreateWindow<EnumForUnityLayersCreator>();
        }

        [Button]
        private void Create()
        {
            StringBuilder sb = new StringBuilder();

            sb.Append($"// Code generated by {nameof(EnumForUnityLayersCreator)}.cs. Use menu item \"{MenuPath}\" to update\n\n");

            if (@namespace != null)
            {
                sb.Append("namespace " + @namespace + "\n{\n");
            }

            sb.Append("public enum " + EnumName + "\n{\n");

            for (int i = 0; i < 32; i++)
            {
                string name = LayerMask.LayerToName(i);

                if (string.IsNullOrEmpty(name))
                {
                    continue;
                }

                name = name.Replace(' ', '_');

                sb.Append(name + " = " + i + ",\n");
            }

            sb.Append("}\n");

            if (@namespace != null)
            {
                sb.Append("}");
            }

            string filePath = savePath + "/" + EnumName + ".cs";

            if (File.Exists(filePath))
            {
                File.Delete(filePath);
            }

            using (FileStream stream = File.Create(filePath))
            {
                byte[] bytes = Encoding.UTF8.GetBytes(sb.ToString());
                stream.Write(bytes, 0, bytes.Length);
            }

            AssetDatabase.Refresh();

            Close();
        }
    }
}
#endif
